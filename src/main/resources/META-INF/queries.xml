<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
        http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd" version="2.1">

    <named-query name="Login.findByName">
        <query>
            <![CDATA[
            select l from Login l where l.userName = :name
        ]]>
        </query>
    </named-query>

    <named-query name="Book.findByISBN">
        <query>
            <![CDATA[
            select b from Book b where b.isbn = :isbn
        ]]>
        </query>
    </named-query>


    <named-query name="Book.findInfosByPublicationYear">
        <query>
            <![CDATA[
            select NEW org.books.persistence.dto.BookInfo(b.isbn, b.title, b.price) from Book b where b.publicationYear = :year
        ]]>
        </query>
    </named-query>


    <named-query name="Book.getInfosAll">
        <query>
            <![CDATA[
            select NEW org.books.persistence.dto.BookInfo(b.isbn, b.title, b.price) from Book b
        ]]>
        </query>
    </named-query>


    <named-query name="Customer.findInfosByName">
        <query>
            <![CDATA[
            select NEW org.books.persistence.dto.CustomerInfo(c.id, c.number, c.firstName, c.name, c.email) from Customer c
            where LOWER(c.name) like CONCAT('%', CONCAT(LOWER(:name), '%'))
            or LOWER(c.firstName) like CONCAT('%', CONCAT(LOWER(:name), '%'))
        ]]>
        </query>
    </named-query>

    <named-query name="SalesOrder.findByNumber">
        <query>
            <![CDATA[
            SELECT o
            FROM SalesOrder o
            WHERE o.number = :number
        ]]>
        </query>
    </named-query>

    <named-query name="SalesOrder.searchByCustomerAndYear">
        <query>
            <![CDATA[
            SELECT NEW org.books.persistence.dto.OrderInfo(o.id, o.number, o.date, o.amount, o.status)
            FROM SalesOrder o
            WHERE o.customer = :customer AND EXTRACT(YEAR from o.date) = :year
        ]]>
        </query>
    </named-query>


    <named-query name="SalesOrder.sumOrdersGroupedByCustomerForYear">
        <query>
            <![CDATA[
            SELECT c.name, SUM(o.amount) , COUNT(SIZE(o.salesOrderItems)), SUM(o.amount)/COUNT(SIZE(o.salesOrderItems))
            FROM SalesOrder o JOIN o.customer c
            WHERE EXTRACT(YEAR from o.date) = :year
            GROUP BY o.customer
        ]]>
        </query>
    </named-query>

</entity-mappings>